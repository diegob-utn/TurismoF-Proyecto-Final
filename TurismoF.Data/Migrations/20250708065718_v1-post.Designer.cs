// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using TurismoF.Data.Data;

#nullable disable

namespace TurismoF.Data.Migrations
{
    [DbContext(typeof(Context1))]
    [Migration("20250708065718_v1-post")]
    partial class v1post
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("TurismoF.Modelos.ApplicationUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("ApplicationUsers");
                });

            modelBuilder.Entity("TurismoF.Modelos.Asiento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Fila")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Numero")
                        .HasColumnType("integer");

                    b.Property<int>("TipoAsiento")
                        .HasColumnType("integer");

                    b.Property<int>("Ubicacion")
                        .HasColumnType("integer");

                    b.Property<int?>("VagonId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("VagonId");

                    b.ToTable("Asientos");
                });

            modelBuilder.Entity("TurismoF.Modelos.Boleto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("AsientoId")
                        .HasColumnType("integer");

                    b.Property<int>("Categoria")
                        .HasColumnType("integer");

                    b.Property<int>("Estado")
                        .HasColumnType("integer");

                    b.Property<DateTime>("FechaEmision")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal>("PrecioFinal")
                        .HasColumnType("numeric");

                    b.Property<int?>("ReservaId")
                        .HasColumnType("integer");

                    b.Property<int>("TipoAsiento")
                        .HasColumnType("integer");

                    b.Property<int?>("ViajeId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("AsientoId");

                    b.HasIndex("ReservaId");

                    b.HasIndex("ViajeId");

                    b.ToTable("Boletos");
                });

            modelBuilder.Entity("TurismoF.Modelos.Pago", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ApplicationUserId")
                        .HasColumnType("integer");

                    b.Property<int>("Estado")
                        .HasColumnType("integer");

                    b.Property<DateTime>("FechaPago")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal>("Monto")
                        .HasColumnType("numeric");

                    b.Property<int>("ReservaId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationUserId");

                    b.HasIndex("ReservaId");

                    b.ToTable("Pagos");
                });

            modelBuilder.Entity("TurismoF.Modelos.PrecioConfiguracion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Categoria")
                        .HasColumnType("integer");

                    b.Property<decimal>("Descuento")
                        .HasColumnType("numeric");

                    b.Property<decimal>("PrecioBase")
                        .HasColumnType("numeric");

                    b.Property<int?>("RutaId")
                        .HasColumnType("integer");

                    b.Property<int>("TipoAsiento")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("RutaId");

                    b.ToTable("PreciosConfiguracion");
                });

            modelBuilder.Entity("TurismoF.Modelos.Reserva", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ApplicationUserId")
                        .HasColumnType("integer");

                    b.Property<int>("Estado")
                        .HasColumnType("integer");

                    b.Property<DateTime>("FechaReserva")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("ViajeId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationUserId");

                    b.HasIndex("ViajeId");

                    b.ToTable("Reservas");
                });

            modelBuilder.Entity("TurismoF.Modelos.Ruta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UbicacionFin")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UbicacionInicio")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Rutas");
                });

            modelBuilder.Entity("TurismoF.Modelos.Tren", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CantidadAsientosPorVagon")
                        .HasColumnType("integer");

                    b.Property<int>("CantidadVagones")
                        .HasColumnType("integer");

                    b.Property<int>("Estado")
                        .HasColumnType("integer");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Trenes");
                });

            modelBuilder.Entity("TurismoF.Modelos.Vagon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("EsPreferencial")
                        .HasColumnType("boolean");

                    b.Property<int>("Numero")
                        .HasColumnType("integer");

                    b.Property<int>("TipoVagon")
                        .HasColumnType("integer");

                    b.Property<int>("TrenId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("TrenId");

                    b.ToTable("Vagones");
                });

            modelBuilder.Entity("TurismoF.Modelos.Viaje", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Estado")
                        .HasColumnType("integer");

                    b.Property<DateTime>("FechaSalida")
                        .HasColumnType("timestamp with time zone");

                    b.Property<TimeSpan>("HoraSalida")
                        .HasColumnType("interval");

                    b.Property<int>("RutaId")
                        .HasColumnType("integer");

                    b.Property<int>("TrenId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("RutaId");

                    b.HasIndex("TrenId");

                    b.ToTable("Viajes");
                });

            modelBuilder.Entity("TurismoF.Modelos.Asiento", b =>
                {
                    b.HasOne("TurismoF.Modelos.Vagon", "Vagon")
                        .WithMany("Asientos")
                        .HasForeignKey("VagonId");

                    b.Navigation("Vagon");
                });

            modelBuilder.Entity("TurismoF.Modelos.Boleto", b =>
                {
                    b.HasOne("TurismoF.Modelos.Asiento", "Asiento")
                        .WithMany("Boletos")
                        .HasForeignKey("AsientoId");

                    b.HasOne("TurismoF.Modelos.Reserva", "Reserva")
                        .WithMany("Boletos")
                        .HasForeignKey("ReservaId");

                    b.HasOne("TurismoF.Modelos.Viaje", "Viaje")
                        .WithMany("Boletos")
                        .HasForeignKey("ViajeId");

                    b.Navigation("Asiento");

                    b.Navigation("Reserva");

                    b.Navigation("Viaje");
                });

            modelBuilder.Entity("TurismoF.Modelos.Pago", b =>
                {
                    b.HasOne("TurismoF.Modelos.ApplicationUser", "ApplicationUser")
                        .WithMany("Pagos")
                        .HasForeignKey("ApplicationUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TurismoF.Modelos.Reserva", "Reserva")
                        .WithMany("Pagos")
                        .HasForeignKey("ReservaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApplicationUser");

                    b.Navigation("Reserva");
                });

            modelBuilder.Entity("TurismoF.Modelos.PrecioConfiguracion", b =>
                {
                    b.HasOne("TurismoF.Modelos.Ruta", "Ruta")
                        .WithMany("PreciosConfiguracion")
                        .HasForeignKey("RutaId");

                    b.Navigation("Ruta");
                });

            modelBuilder.Entity("TurismoF.Modelos.Reserva", b =>
                {
                    b.HasOne("TurismoF.Modelos.ApplicationUser", "ApplicationUser")
                        .WithMany("Reservas")
                        .HasForeignKey("ApplicationUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TurismoF.Modelos.Viaje", "Viaje")
                        .WithMany("Reservas")
                        .HasForeignKey("ViajeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApplicationUser");

                    b.Navigation("Viaje");
                });

            modelBuilder.Entity("TurismoF.Modelos.Vagon", b =>
                {
                    b.HasOne("TurismoF.Modelos.Tren", "Tren")
                        .WithMany("Vagones")
                        .HasForeignKey("TrenId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tren");
                });

            modelBuilder.Entity("TurismoF.Modelos.Viaje", b =>
                {
                    b.HasOne("TurismoF.Modelos.Ruta", "Ruta")
                        .WithMany("Viajes")
                        .HasForeignKey("RutaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TurismoF.Modelos.Tren", "Tren")
                        .WithMany("Viajes")
                        .HasForeignKey("TrenId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ruta");

                    b.Navigation("Tren");
                });

            modelBuilder.Entity("TurismoF.Modelos.ApplicationUser", b =>
                {
                    b.Navigation("Pagos");

                    b.Navigation("Reservas");
                });

            modelBuilder.Entity("TurismoF.Modelos.Asiento", b =>
                {
                    b.Navigation("Boletos");
                });

            modelBuilder.Entity("TurismoF.Modelos.Reserva", b =>
                {
                    b.Navigation("Boletos");

                    b.Navigation("Pagos");
                });

            modelBuilder.Entity("TurismoF.Modelos.Ruta", b =>
                {
                    b.Navigation("PreciosConfiguracion");

                    b.Navigation("Viajes");
                });

            modelBuilder.Entity("TurismoF.Modelos.Tren", b =>
                {
                    b.Navigation("Vagones");

                    b.Navigation("Viajes");
                });

            modelBuilder.Entity("TurismoF.Modelos.Vagon", b =>
                {
                    b.Navigation("Asientos");
                });

            modelBuilder.Entity("TurismoF.Modelos.Viaje", b =>
                {
                    b.Navigation("Boletos");

                    b.Navigation("Reservas");
                });
#pragma warning restore 612, 618
        }
    }
}
